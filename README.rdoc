= dm-migrations

DataMapper plugin for writing and specing migrations.

- Foreign Keys support:
- foreign_key_exists? table_name, foreign_key
- table_exists? table
- table_column_exists? table, column
- enable_foreign_key_checks
- disable_foreign_key_checks




== Example

  require 'dm-migrations/migration_runner'

  DataMapper.setup(:default, "sqlite3::memory")

  DataMapper::Logger.new(STDOUT, :debug)
  DataMapper.logger.debug( "Starting Migration" )

  migration 1, :create_people_table do
    up do
      # Check if table exists
      if table_exists? :positions
        create_table :jobs do
          column :id,   Integer, :serial => true
          column :name, String
        end
      end
      create_table :people do
        column :id,   Integer, :serial => true
        column :desc, String
        column :job_id
      end
      if table_column_exists? :people, :jobs_id
        modify_table :people do
          add_foreign_key :job_id, :jobs
        end
      end
    end

    down do
      disable_foreign_key_checks
      drop_table :people
      drop_table :jobs
      enable_foreign_key_checks
    end
  end

  migration 2, :make_desc_text do
    up do
      modify_table :people do
        # You currently have to use the underlying DB type here, rather than
        # a DataMapper type
        change_column :desc, 'text'
        
        drop_foreign_key :job_id, :jobs
      end
    end
  end

  migrate_up!

For more, see the examples directory.
